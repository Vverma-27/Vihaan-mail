version: "3.8"

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: always
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./frontend/.env

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    env_file:
      - ./backend/.env

  worker:
    build: ./backend
    container_name: worker
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    env_file:
      - ./backend/.env
    command: npm run worker:prod

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
